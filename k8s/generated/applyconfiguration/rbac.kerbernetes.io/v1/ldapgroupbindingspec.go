// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1

// LdapGroupBindingSpecApplyConfiguration represents a declarative configuration of the LdapGroupBindingSpec type for use
// with apply.
type LdapGroupBindingSpecApplyConfiguration struct {
	LdapGroupDN *string                                  `json:"ldapGroupDN,omitempty"`
	Bindings    []LdapGroupBindingItemApplyConfiguration `json:"bindings,omitempty"`
}

// LdapGroupBindingSpecApplyConfiguration constructs a declarative configuration of the LdapGroupBindingSpec type for use with
// apply.
func LdapGroupBindingSpec() *LdapGroupBindingSpecApplyConfiguration {
	return &LdapGroupBindingSpecApplyConfiguration{}
}

// WithLdapGroupDN sets the LdapGroupDN field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the LdapGroupDN field is set to the value of the last call.
func (b *LdapGroupBindingSpecApplyConfiguration) WithLdapGroupDN(value string) *LdapGroupBindingSpecApplyConfiguration {
	b.LdapGroupDN = &value
	return b
}

// WithBindings adds the given value to the Bindings field in the declarative configuration
// and returns the receiver, so that objects can be build by chaining "With" function invocations.
// If called multiple times, values provided by each call will be appended to the Bindings field.
func (b *LdapGroupBindingSpecApplyConfiguration) WithBindings(values ...*LdapGroupBindingItemApplyConfiguration) *LdapGroupBindingSpecApplyConfiguration {
	for i := range values {
		if values[i] == nil {
			panic("nil value passed to WithBindings")
		}
		b.Bindings = append(b.Bindings, *values[i])
	}
	return b
}

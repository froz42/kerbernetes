// Code generated by client-gen. DO NOT EDIT.

package fake

import (
	v1 "github.com/froz42/kerbernetes/k8s/api/rbac.kerbernetes.io/v1"
	rbackerbernetesiov1 "github.com/froz42/kerbernetes/k8s/generated/applyconfiguration/rbac.kerbernetes.io/v1"
	typedrbackerbernetesiov1 "github.com/froz42/kerbernetes/k8s/generated/clientset/versioned/typed/rbac.kerbernetes.io/v1"
	gentype "k8s.io/client-go/gentype"
)

// fakeLdapClusterRoleBindings implements LdapClusterRoleBindingInterface
type fakeLdapClusterRoleBindings struct {
	*gentype.FakeClientWithListAndApply[*v1.LdapClusterRoleBinding, *v1.LdapClusterRoleBindingList, *rbackerbernetesiov1.LdapClusterRoleBindingApplyConfiguration]
	Fake *FakeRbacKerbenetesV1
}

func newFakeLdapClusterRoleBindings(fake *FakeRbacKerbenetesV1) typedrbackerbernetesiov1.LdapClusterRoleBindingInterface {
	return &fakeLdapClusterRoleBindings{
		gentype.NewFakeClientWithListAndApply[*v1.LdapClusterRoleBinding, *v1.LdapClusterRoleBindingList, *rbackerbernetesiov1.LdapClusterRoleBindingApplyConfiguration](
			fake.Fake,
			"",
			v1.SchemeGroupVersion.WithResource("ldapclusterrolebindings"),
			v1.SchemeGroupVersion.WithKind("LdapClusterRoleBinding"),
			func() *v1.LdapClusterRoleBinding { return &v1.LdapClusterRoleBinding{} },
			func() *v1.LdapClusterRoleBindingList { return &v1.LdapClusterRoleBindingList{} },
			func(dst, src *v1.LdapClusterRoleBindingList) { dst.ListMeta = src.ListMeta },
			func(list *v1.LdapClusterRoleBindingList) []*v1.LdapClusterRoleBinding {
				return gentype.ToPointerSlice(list.Items)
			},
			func(list *v1.LdapClusterRoleBindingList, items []*v1.LdapClusterRoleBinding) {
				list.Items = gentype.FromPointerSlice(items)
			},
		),
		fake,
	}
}
